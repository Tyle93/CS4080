{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2","program":"C:\\Users\\pluto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","bytes","C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=73b68ba4ec5459be","-C","extra-filename=-73b68ba4ec5459be","--out-dir","e:\\Projects\\CS4080\\Rust\\Server\\target\\rls\\debug\\deps","-L","dependency=e:\\Projects\\CS4080\\Rust\\Server\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\pluto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Projects\\CS4080\\Rust\\Server\\target\\rls\\debug\\deps\\libbytes-73b68ba4ec5459be.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[14252591588501674967,4413108716147080776]},"crate_root":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src","external_crates":[{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":57903,"byte_end":57908,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":57930,"byte_end":57934,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":57957,"byte_end":57962,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":58012,"byte_end":58018,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":58028,"byte_end":58034,"line_start":18,"line_end":18,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4279,"byte_end":4282,"line_start":25,"line_end":25,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4307,"byte_end":4313,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4335,"byte_end":4341,"line_start":27,"line_end":27,"column_start":21,"column_end":27},"alias_span":null,"name":"BufExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4343,"byte_end":4352,"line_start":27,"line_end":27,"column_start":29,"column_end":38},"alias_span":null,"name":"BufMutExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4402,"byte_end":4412,"line_start":29,"line_end":29,"column_start":24,"column_end":34},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4434,"byte_end":4442,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":2899,"byte_end":2902,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":2908,"byte_end":2914,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":3002,"byte_end":3010,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":3034,"byte_end":3039,"line_start":93,"line_end":93,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":569},{"krate":0,"index":739},{"krate":0,"index":747},{"krate":0,"index":767},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations,\n       rust_2018_idioms)","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"no_std","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":137,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":90},{"krate":0,"index":174},{"krate":0,"index":310},{"krate":0,"index":325},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":6882,"byte_end":6885,"line_start":71,"line_end":71,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":7632,"byte_end":7641,"line_start":97,"line_end":97,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"fn (&self) -> usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":8493,"byte_end":8498,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf_impl::Buf::bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":9869,"byte_end":9883,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"bytes_vectored","qualname":"::buf::buf_impl::Buf::bytes_vectored","value":"fn <'a> (&'a self, dst: &mut [IoSlice<'a>]) -> usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":9838,"byte_end":9861,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":11025,"byte_end":11032,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":11435,"byte_end":11448,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"fn (&self) -> bool","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":12073,"byte_end":12086,"line_start":242,"line_end":242,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"fn (&mut self, dst: &mut [u8]) -> ()","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":12958,"byte_end":12964,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"fn (&mut self) -> u8","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":13492,"byte_end":13498,"line_start":303,"line_end":303,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"fn (&mut self) -> i8","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":14074,"byte_end":14081,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":14595,"byte_end":14605,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":15110,"byte_end":15117,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":15628,"byte_end":15638,"line_start":386,"line_end":386,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":16162,"byte_end":16169,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":16699,"byte_end":16709,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":17226,"byte_end":17233,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":17756,"byte_end":17766,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":18310,"byte_end":18317,"line_start":486,"line_end":486,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":18867,"byte_end":18877,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":19418,"byte_end":19425,"line_start":526,"line_end":526,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":19972,"byte_end":19982,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":20577,"byte_end":20585,"line_start":566,"line_end":566,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":21188,"byte_end":21199,"line_start":586,"line_end":586,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":21793,"byte_end":21801,"line_start":606,"line_end":606,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":22401,"byte_end":22412,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":22937,"byte_end":22945,"line_start":646,"line_end":646,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":23488,"byte_end":23499,"line_start":666,"line_end":666,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":24032,"byte_end":24039,"line_start":686,"line_end":686,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":24578,"byte_end":24588,"line_start":706,"line_end":706,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":25159,"byte_end":25166,"line_start":727,"line_end":727,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":25724,"byte_end":25734,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":26305,"byte_end":26312,"line_start":769,"line_end":769,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":26886,"byte_end":26896,"line_start":790,"line_end":790,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":27257,"byte_end":27265,"line_start":804,"line_end":804,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::buf::buf_impl::Buf::to_bytes","value":"fn (&mut self) -> crate::Bytes","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Consumes remaining bytes inside self and returns new instance of `Bytes`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":30628,"byte_end":30634,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":31492,"byte_end":31505,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"fn (&self) -> usize","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":32955,"byte_end":32966,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":33432,"byte_end":33449,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"fn (&self) -> bool","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":35002,"byte_end":35011,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":36454,"byte_end":36472,"line_start":196,"line_end":196,"column_start":8,"column_end":26},"name":"bytes_vectored_mut","qualname":"::buf::buf_mut::BufMut::bytes_vectored_mut","value":"fn <'a> (&'a mut self, dst: &mut [IoSliceMut<'a>]) -> usize","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple mutable slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":36423,"byte_end":36446,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":37241,"byte_end":37244,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"fn <T> (&mut self, mut src: T) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":38320,"byte_end":38329,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"fn (&mut self, src: &[u8]) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":39379,"byte_end":39385,"line_start":313,"line_end":313,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"fn (&mut self, n: u8) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":39884,"byte_end":39890,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"fn (&mut self, n: i8) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":40430,"byte_end":40437,"line_start":359,"line_end":359,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":40967,"byte_end":40977,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":41498,"byte_end":41505,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":42032,"byte_end":42042,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":42578,"byte_end":42585,"line_start":447,"line_end":447,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":43127,"byte_end":43137,"line_start":469,"line_end":469,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":43670,"byte_end":43677,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":44216,"byte_end":44226,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":44790,"byte_end":44797,"line_start":535,"line_end":535,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":45363,"byte_end":45373,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":45934,"byte_end":45941,"line_start":579,"line_end":579,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":46504,"byte_end":46514,"line_start":601,"line_end":601,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":47129,"byte_end":47137,"line_start":623,"line_end":623,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":47755,"byte_end":47766,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":48379,"byte_end":48387,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":49002,"byte_end":49013,"line_start":689,"line_end":689,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":49555,"byte_end":49563,"line_start":711,"line_end":711,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":50163,"byte_end":50174,"line_start":733,"line_end":733,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":50738,"byte_end":50745,"line_start":755,"line_end":755,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":51337,"byte_end":51347,"line_start":777,"line_end":777,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":51948,"byte_end":51955,"line_start":800,"line_end":800,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":52529,"byte_end":52539,"line_start":823,"line_end":823,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":53126,"byte_end":53133,"line_start":846,"line_end":846,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":53723,"byte_end":53733,"line_start":869,"line_end":869,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":56839,"byte_end":56849,"line_start":985,"line_end":985,"column_start":12,"column_end":22},"name":"IoSliceMut","qualname":"::buf::buf_mut::IoSliceMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used for `readv`.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":56783,"byte_end":56803,"line_start":983,"line_end":983,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":56804,"byte_end":56827,"line_start":984,"line_end":984,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::buf::ext","value":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":218},{"krate":0,"index":237},{"krate":0,"index":257},{"krate":0,"index":274},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":308}],"decl_id":null,"docs":" Extra utilities for `Buf` and `BufMut` types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":63439,"byte_end":63444,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::ext::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":63574,"byte_end":63577,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<T, U>>::new","value":"fn (a: T, b: U) -> Chain<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Chain` sequencing the provided values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":63968,"byte_end":63977,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":64401,"byte_end":64410,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":64757,"byte_end":64765,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":65189,"byte_end":65197,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":65638,"byte_end":65648,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68004,"byte_end":68009,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::ext::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68253,"byte_end":68263,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68447,"byte_end":68454,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68649,"byte_end":68656,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68952,"byte_end":68957,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":69222,"byte_end":69231,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":70078,"byte_end":70084,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::ext::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":70537,"byte_end":70544,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":70732,"byte_end":70739,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":71214,"byte_end":71224,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":72022,"byte_end":72026,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::ext::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":72673,"byte_end":72683,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":73077,"byte_end":73084,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":73582,"byte_end":73589,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":74156,"byte_end":74161,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":74814,"byte_end":74823,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":75595,"byte_end":75601,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::ext::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":877}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":76076,"byte_end":76083,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":76526,"byte_end":76533,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":77015,"byte_end":77025,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":58096,"byte_end":58102,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"BufExt","qualname":"::buf::ext::BufExt","value":"BufExt: Buf","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300}],"decl_id":null,"docs":" Extra methods for implementations of `Buf`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":58700,"byte_end":58704,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::ext::BufExt::take","value":"fn (self, limit: usize) -> Take<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":59300,"byte_end":59305,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::ext::BufExt::chain","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60203,"byte_end":60209,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::ext::BufExt::reader","value":"fn (self) -> Reader<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60172,"byte_end":60195,"line_start":93,"line_end":93,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60387,"byte_end":60396,"line_start":102,"line_end":102,"column_start":11,"column_end":20},"name":"BufMutExt","qualname":"::buf::ext::BufMutExt","value":"BufMutExt: BufMut","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"decl_id":null,"docs":" Extra methods for implementations of `BufMut`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60773,"byte_end":60778,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::ext::BufMutExt::limit","value":"fn (self, limit: usize) -> Limit<Self>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":61640,"byte_end":61646,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::ext::BufMutExt::writer","value":"fn (self) -> Writer<Self>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":61609,"byte_end":61632,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":62308,"byte_end":62317,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::ext::BufMutExt::chain_mut","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":77929,"byte_end":77937,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":883}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":78466,"byte_end":78469,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IntoIter<T>>::new","value":"fn (inner: T) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":78933,"byte_end":78943,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":79422,"byte_end":79429,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":79962,"byte_end":79969,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":82347,"byte_end":82355,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":85175,"byte_end":85188,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"fn (capacity: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":85154,"byte_end":85163,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":85787,"byte_end":85790,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"fn () -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":85766,"byte_end":85775,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86115,"byte_end":86118,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86094,"byte_end":86103,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86416,"byte_end":86424,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86395,"byte_end":86404,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86757,"byte_end":86765,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":86736,"byte_end":86745,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":87581,"byte_end":87587,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"fn (mut self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":87560,"byte_end":87569,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":88989,"byte_end":88998,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":90033,"byte_end":90038,"line_start":313,"line_end":313,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"fn (&mut self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":90826,"byte_end":90834,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":91680,"byte_end":91688,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":92070,"byte_end":92075,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":92800,"byte_end":92806,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"fn (&mut self, new_len: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":93865,"byte_end":93872,"line_start":458,"line_end":458,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":95643,"byte_end":95650,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":95622,"byte_end":95631,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":101171,"byte_end":101188,"line_start":659,"line_end":659,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"fn (&mut self, extend: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":101875,"byte_end":101882,"line_start":683,"line_end":683,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"fn (&mut self, other: BytesMut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Combine splitted BytesMut objects back as contiguous.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":125379,"byte_end":125384,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":" A reference counted contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":126043,"byte_end":126046,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Bytes>::new","value":"fn () -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":126022,"byte_end":126031,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":126512,"byte_end":126523,"line_start":118,"line_end":118,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"fn (bytes: &'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":126452,"byte_end":126461,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"cfg(not (all (loom, test)))","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":126466,"byte_end":126494,"line_start":117,"line_end":117,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":127264,"byte_end":127267,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":127243,"byte_end":127252,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":127544,"byte_end":127552,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":127523,"byte_end":127532,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":127670,"byte_end":127685,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":128345,"byte_end":128350,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"fn (&self, range: impl RangeBounds<usize>) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":130018,"byte_end":130027,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"fn (&self, subset: &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":131060,"byte_end":131069,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":132051,"byte_end":132059,"line_start":334,"line_end":334,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":133023,"byte_end":133031,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":133002,"byte_end":133011,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":133448,"byte_end":133453,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":133427,"byte_end":133436,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":27873,"byte_end":27876,"line_start":831,"line_end":831,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":28506,"byte_end":28512,"line_start":867,"line_end":867,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":29080,"byte_end":29086,"line_start":896,"line_end":896,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":54307,"byte_end":54310,"line_start":893,"line_end":893,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":55285,"byte_end":55288,"line_start":932,"line_end":932,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":56925,"byte_end":56935,"line_start":988,"line_end":988,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":57170,"byte_end":57180,"line_start":997,"line_end":997,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":57366,"byte_end":57376,"line_start":1004,"line_end":1004,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":63487,"byte_end":63492,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":65720,"byte_end":65725,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":66620,"byte_end":66625,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":67627,"byte_end":67632,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68168,"byte_end":68173,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":69318,"byte_end":69323,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":70177,"byte_end":70183,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":71298,"byte_end":71304,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":71557,"byte_end":71563,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":72176,"byte_end":72180,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":74904,"byte_end":74908,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":75697,"byte_end":75703,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":77103,"byte_end":77109,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60320,"byte_end":60321,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":62473,"byte_end":62474,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":77968,"byte_end":77976,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":80053,"byte_end":80061,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":80461,"byte_end":80469,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\vec_deque.rs","byte_start":80543,"byte_end":80551,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":84344,"byte_end":84352,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108080,"byte_end":108088,"line_start":878,"line_end":878,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108522,"byte_end":108530,"line_start":895,"line_end":895,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108962,"byte_end":108970,"line_start":917,"line_end":917,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109697,"byte_end":109705,"line_start":945,"line_end":945,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109802,"byte_end":109810,"line_start":952,"line_end":952,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109935,"byte_end":109943,"line_start":961,"line_end":961,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110041,"byte_end":110049,"line_start":967,"line_end":967,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110168,"byte_end":110176,"line_start":974,"line_end":974,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110297,"byte_end":110305,"line_start":980,"line_end":980,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110415,"byte_end":110423,"line_start":986,"line_end":986,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110544,"byte_end":110552,"line_start":992,"line_end":992,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110702,"byte_end":110710,"line_start":998,"line_end":998,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110835,"byte_end":110843,"line_start":1004,"line_end":1004,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110866,"byte_end":110874,"line_start":1007,"line_end":1007,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110975,"byte_end":110983,"line_start":1014,"line_end":1014,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111144,"byte_end":111152,"line_start":1020,"line_end":1020,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111308,"byte_end":111316,"line_start":1027,"line_end":1027,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111407,"byte_end":111415,"line_start":1033,"line_end":1033,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111513,"byte_end":111521,"line_start":1039,"line_end":1039,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111900,"byte_end":111908,"line_start":1056,"line_end":1056,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112010,"byte_end":112018,"line_start":1062,"line_end":1062,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112381,"byte_end":112389,"line_start":1080,"line_end":1080,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112828,"byte_end":112836,"line_start":1097,"line_end":1097,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":113000,"byte_end":113008,"line_start":1103,"line_end":1103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":113177,"byte_end":113185,"line_start":1109,"line_end":1109,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":114823,"byte_end":114829,"line_start":1158,"line_end":1158,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117670,"byte_end":117678,"line_start":1238,"line_end":1238,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117703,"byte_end":117711,"line_start":1239,"line_end":1239,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117793,"byte_end":117801,"line_start":1247,"line_end":1247,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117905,"byte_end":117913,"line_start":1253,"line_end":1253,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118315,"byte_end":118323,"line_start":1271,"line_end":1271,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118436,"byte_end":118444,"line_start":1277,"line_end":1277,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118858,"byte_end":118866,"line_start":1295,"line_end":1295,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118979,"byte_end":118987,"line_start":1301,"line_end":1301,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119139,"byte_end":119142,"line_start":1307,"line_end":1307,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119257,"byte_end":119260,"line_start":1313,"line_end":1313,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119406,"byte_end":119414,"line_start":1319,"line_end":1319,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119525,"byte_end":119533,"line_start":1325,"line_end":1325,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119690,"byte_end":119696,"line_start":1331,"line_end":1331,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119807,"byte_end":119813,"line_start":1337,"line_end":1337,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119969,"byte_end":119977,"line_start":1343,"line_end":1343,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120131,"byte_end":120139,"line_start":1351,"line_end":1351,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120843,"byte_end":120848,"line_start":1383,"line_end":1383,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120963,"byte_end":120971,"line_start":1389,"line_end":1389,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":125731,"byte_end":125736,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134200,"byte_end":134205,"line_start":428,"line_end":428,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134230,"byte_end":134235,"line_start":429,"line_end":429,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134254,"byte_end":134259,"line_start":431,"line_end":431,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134419,"byte_end":134424,"line_start":440,"line_end":440,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134592,"byte_end":134597,"line_start":449,"line_end":449,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134747,"byte_end":134752,"line_start":455,"line_end":455,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135214,"byte_end":135219,"line_start":479,"line_end":479,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135346,"byte_end":135351,"line_start":488,"line_end":488,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135453,"byte_end":135458,"line_start":495,"line_end":495,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135590,"byte_end":135595,"line_start":501,"line_end":501,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135685,"byte_end":135690,"line_start":507,"line_end":507,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136055,"byte_end":136060,"line_start":525,"line_end":525,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136213,"byte_end":136218,"line_start":533,"line_end":533,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136336,"byte_end":136341,"line_start":539,"line_end":539,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136488,"byte_end":136493,"line_start":545,"line_end":545,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136615,"byte_end":136620,"line_start":551,"line_end":551,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136650,"byte_end":136655,"line_start":553,"line_end":553,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136767,"byte_end":136772,"line_start":559,"line_end":559,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137169,"byte_end":137174,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137295,"byte_end":137300,"line_start":583,"line_end":583,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137709,"byte_end":137714,"line_start":601,"line_end":601,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137827,"byte_end":137832,"line_start":607,"line_end":607,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137988,"byte_end":137991,"line_start":613,"line_end":613,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138100,"byte_end":138103,"line_start":619,"line_end":619,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138246,"byte_end":138251,"line_start":625,"line_end":625,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138362,"byte_end":138367,"line_start":631,"line_end":631,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138528,"byte_end":138534,"line_start":637,"line_end":637,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138639,"byte_end":138645,"line_start":643,"line_end":643,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139302,"byte_end":139307,"line_start":673,"line_end":673,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139458,"byte_end":139463,"line_start":681,"line_end":681,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139640,"byte_end":139645,"line_start":691,"line_end":691,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139749,"byte_end":139754,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139873,"byte_end":139878,"line_start":704,"line_end":704,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140002,"byte_end":140007,"line_start":710,"line_end":710,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140414,"byte_end":140419,"line_start":727,"line_end":727,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140549,"byte_end":140555,"line_start":735,"line_end":735,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\debug.rs","byte_start":147929,"byte_end":147936,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\hex.rs","byte_start":148930,"byte_end":148938,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\hex.rs","byte_start":149117,"byte_end":149125,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\lib.rs","byte_start":2868,"byte_end":2871,"line_start":81,"line_end":81,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\mod.rs","byte_start":4224,"byte_end":4227,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":174}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":27873,"byte_end":27876,"line_start":831,"line_end":831,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":90},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":28506,"byte_end":28512,"line_start":867,"line_end":867,"column_start":14,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":29045},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_impl.rs","byte_start":29080,"byte_end":29086,"line_start":896,"line_end":896,"column_start":39,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":6390},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":54307,"byte_end":54310,"line_start":893,"line_end":893,"column_start":37,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":90},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":55285,"byte_end":55288,"line_start":932,"line_end":932,"column_start":17,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":3763},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":56925,"byte_end":56935,"line_start":988,"line_end":988,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":7486}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":57170,"byte_end":57180,"line_start":997,"line_end":997,"column_start":33,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\buf_mut.rs","byte_start":57366,"byte_end":57376,"line_start":1004,"line_end":1004,"column_start":46,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":63487,"byte_end":63492,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":65720,"byte_end":65725,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":66620,"byte_end":66625,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\chain.rs","byte_start":67627,"byte_end":67632,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":846},"to":{"krate":1,"index":3808}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":68168,"byte_end":68173,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\limit.rs","byte_start":69318,"byte_end":69323,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":70177,"byte_end":70183,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":71298,"byte_end":71304,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":862},"to":{"krate":5,"index":2848}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\reader.rs","byte_start":71557,"byte_end":71563,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":862},"to":{"krate":5,"index":2924}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":72176,"byte_end":72180,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\take.rs","byte_start":74904,"byte_end":74908,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":868},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":75697,"byte_end":75703,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\writer.rs","byte_start":77103,"byte_end":77109,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":875},"to":{"krate":5,"index":2902}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":58104,"byte_end":58107,"line_start":21,"line_end":21,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":25},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60320,"byte_end":60321,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":60398,"byte_end":60404,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":102},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\ext\\mod.rs","byte_start":62473,"byte_end":62474,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":77968,"byte_end":77976,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":80053,"byte_end":80061,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":881},"to":{"krate":1,"index":3510}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\iter.rs","byte_start":80461,"byte_end":80469,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":881},"to":{"krate":1,"index":3796}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\buf\\vec_deque.rs","byte_start":80543,"byte_end":80551,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":4,"index":2037},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":84344,"byte_end":84352,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108080,"byte_end":108088,"line_start":878,"line_end":878,"column_start":15,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108522,"byte_end":108530,"line_start":895,"line_end":895,"column_start":14,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":108962,"byte_end":108970,"line_start":917,"line_end":917,"column_start":17,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":102}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109697,"byte_end":109705,"line_start":945,"line_end":945,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2212}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109802,"byte_end":109810,"line_start":952,"line_end":952,"column_start":16,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":1703}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":109935,"byte_end":109943,"line_start":961,"line_end":961,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2215}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110041,"byte_end":110049,"line_start":967,"line_end":967,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":1714}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110168,"byte_end":110176,"line_start":974,"line_end":974,"column_start":29,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110297,"byte_end":110305,"line_start":980,"line_end":980,"column_start":28,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110415,"byte_end":110423,"line_start":986,"line_end":986,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110544,"byte_end":110552,"line_start":992,"line_end":992,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110702,"byte_end":110710,"line_start":998,"line_end":998,"column_start":14,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2065}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110835,"byte_end":110843,"line_start":1004,"line_end":1004,"column_start":13,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2044}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110866,"byte_end":110874,"line_start":1007,"line_end":1007,"column_start":18,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2204}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":110975,"byte_end":110983,"line_start":1014,"line_end":1014,"column_start":21,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":7486}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111144,"byte_end":111152,"line_start":1020,"line_end":1020,"column_start":21,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":7128}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111308,"byte_end":111316,"line_start":1027,"line_end":1027,"column_start":23,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2285}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111407,"byte_end":111415,"line_start":1033,"line_end":1033,"column_start":26,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2288}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111513,"byte_end":111521,"line_start":1039,"line_end":1039,"column_start":21,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":7445}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":111900,"byte_end":111908,"line_start":1056,"line_end":1056,"column_start":16,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2179}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112010,"byte_end":112018,"line_start":1062,"line_end":1062,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":3808}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112381,"byte_end":112389,"line_start":1080,"line_end":1080,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":3817}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":112828,"byte_end":112836,"line_start":1097,"line_end":1097,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":3817}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":113000,"byte_end":113008,"line_start":1103,"line_end":1103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":3804}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":113177,"byte_end":113185,"line_start":1109,"line_end":1109,"column_start":35,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":3804}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":114823,"byte_end":114829,"line_start":1158,"line_end":1158,"column_start":6,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117670,"byte_end":117678,"line_start":1238,"line_end":1238,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":1534}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117703,"byte_end":117711,"line_start":1239,"line_end":1239,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":1544}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117793,"byte_end":117801,"line_start":1247,"line_end":1247,"column_start":26,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":117905,"byte_end":117913,"line_start":1253,"line_end":1253,"column_start":27,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118315,"byte_end":118323,"line_start":1271,"line_end":1271,"column_start":25,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118436,"byte_end":118444,"line_start":1277,"line_end":1277,"column_start":26,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118858,"byte_end":118866,"line_start":1295,"line_end":1295,"column_start":29,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":118979,"byte_end":118987,"line_start":1301,"line_end":1301,"column_start":30,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119139,"byte_end":119142,"line_start":1307,"line_end":1307,"column_start":30,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":4,"index":3763},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119257,"byte_end":119260,"line_start":1313,"line_end":1313,"column_start":31,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":4,"index":3763},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119406,"byte_end":119414,"line_start":1319,"line_end":1319,"column_start":28,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119525,"byte_end":119533,"line_start":1325,"line_end":1325,"column_start":29,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119690,"byte_end":119696,"line_start":1331,"line_end":1331,"column_start":30,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":4,"index":4325},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119807,"byte_end":119813,"line_start":1337,"line_end":1337,"column_start":31,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":4,"index":4325},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":119969,"byte_end":119977,"line_start":1343,"line_end":1343,"column_start":42,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120131,"byte_end":120139,"line_start":1351,"line_end":1351,"column_start":43,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120843,"byte_end":120848,"line_start":1383,"line_end":1383,"column_start":30,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes_mut.rs","byte_start":120963,"byte_end":120971,"line_start":1389,"line_end":1389,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":381},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":125731,"byte_end":125736,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134200,"byte_end":134205,"line_start":428,"line_end":428,"column_start":22,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":1534}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134230,"byte_end":134235,"line_start":429,"line_end":429,"column_start":22,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":1544}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134254,"byte_end":134259,"line_start":431,"line_end":431,"column_start":15,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134419,"byte_end":134424,"line_start":440,"line_end":440,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2179}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134592,"byte_end":134597,"line_start":449,"line_end":449,"column_start":21,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":7486}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":134747,"byte_end":134752,"line_start":455,"line_end":455,"column_start":14,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":596},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135214,"byte_end":135219,"line_start":479,"line_end":479,"column_start":16,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":1703}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135346,"byte_end":135351,"line_start":488,"line_end":488,"column_start":22,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2212}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135453,"byte_end":135458,"line_start":495,"line_end":495,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":7128}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135590,"byte_end":135595,"line_start":501,"line_end":501,"column_start":23,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2285}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":135685,"byte_end":135690,"line_start":507,"line_end":507,"column_start":23,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":3808}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136055,"byte_end":136060,"line_start":525,"line_end":525,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":3804}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136213,"byte_end":136218,"line_start":533,"line_end":533,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136336,"byte_end":136341,"line_start":539,"line_end":539,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136488,"byte_end":136493,"line_start":545,"line_end":545,"column_start":14,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2065}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136615,"byte_end":136620,"line_start":551,"line_end":551,"column_start":13,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2044}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136650,"byte_end":136655,"line_start":553,"line_end":553,"column_start":26,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":136767,"byte_end":136772,"line_start":559,"line_end":559,"column_start":27,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137169,"byte_end":137174,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137295,"byte_end":137300,"line_start":583,"line_end":583,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137709,"byte_end":137714,"line_start":601,"line_end":601,"column_start":29,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137827,"byte_end":137832,"line_start":607,"line_end":607,"column_start":30,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":137988,"byte_end":137991,"line_start":613,"line_end":613,"column_start":27,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":3763},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138100,"byte_end":138103,"line_start":619,"line_end":619,"column_start":28,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":4,"index":3763},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138246,"byte_end":138251,"line_start":625,"line_end":625,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138362,"byte_end":138367,"line_start":631,"line_end":631,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138528,"byte_end":138534,"line_start":637,"line_end":637,"column_start":27,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":4325},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":138639,"byte_end":138645,"line_start":643,"line_end":643,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":4,"index":4325},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139302,"byte_end":139307,"line_start":673,"line_end":673,"column_start":42,"column_end":47},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2039}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139458,"byte_end":139463,"line_start":681,"line_end":681,"column_start":43,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2076}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139640,"byte_end":139645,"line_start":691,"line_end":691,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2204}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139749,"byte_end":139754,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":139873,"byte_end":139878,"line_start":704,"line_end":704,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140002,"byte_end":140007,"line_start":710,"line_end":710,"column_start":24,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140414,"byte_end":140419,"line_start":727,"line_end":727,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":596},"to":{"krate":1,"index":2221}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\bytes.rs","byte_start":140549,"byte_end":140555,"line_start":735,"line_end":735,"column_start":21,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":601},"to":{"krate":1,"index":7486}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\debug.rs","byte_start":147929,"byte_end":147936,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":7486}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\hex.rs","byte_start":148930,"byte_end":148938,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":7497}},{"span":{"file_name":"C:\\Users\\pluto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-0.5.2\\src\\hex.rs","byte_start":149117,"byte_end":149125,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":7499}}]}